services:
  redis:
    container_name: cache
    image: redis
    ports:
      - 6379:6379
    networks:
      - app-network
    # volumes:
    #   - redis-data:/data
  postgres:
    image: postgres:15.4
    restart: always
    ports:
      - '54321:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: aleum
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: postgres
    networks:
      - app-network
    # volumes:
    #   - postgres-data:/var/lib/postgresql/data
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      # - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # volumes:
    #   - elasticsearch-data:/usr/share/elasticsearch/data
    #   - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - app-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - '2181:2181'
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: 'audit-log:1:1,api-log:1:1,post_created_es:1:1,post_created_cache:1:1'
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    networks:
      - app-network

# volumes:
#   redis-data:
#   postgres-data:
#   elasticsearch-data:

networks:
  app-network:
    driver: bridge
