// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            String       @id @default(uuid())
  email         String    @unique
  password      String
  profile       Profile?
}

model  Profile {
  id            String       @id @default(uuid())
  userId        String       @unique
  user          User      @relation(fields: [userId], references: [id])
  name          String?
  createdAt     DateTime  @default(now())
  Posts         Post[]
  Likes         Like[]
  followers     Follow[]  @relation("follower")
  followees     Follow[]  @relation("followee")
}

model Follow {
  id            String       @id @default(uuid())
  followerId    String
  userProfile1  Profile   @relation(fields: [followerId], references: [id], name: "follower")
  followeeId    String
  userProfile2  Profile   @relation(fields: [followeeId], references: [id], name: "followee")

}

model Post {
  id            String       @id @default(uuid())
  createdBy     String
  userProfile   Profile   @relation(fields: [createdBy], references: [id])
  title         String    @unique
  body          String?   @db.Text
  status        String
  createdAt     DateTime  @default(now())
  likes         Like[]
}

model Like {
  id            String       @id @default(uuid())
  likedBy       String
  userProfile   Profile   @relation(fields: [likedBy], references: [id])
  postId        String
  post          Post      @relation(fields: [postId], references: [id])

}